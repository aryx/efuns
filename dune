(env
 (dev
  ; TODO :standard is
  ; -w @1..3@5..28@30..39@43@46..47@49..57@61..62-40 -strict-sequence -strict-formats -short-paths -keep-locs 
  ; -9 is only for lang_cpp/parsing/parsing_hacks.ml
  ; -58 is for dypgen
  (flags (-w +A-4-6-29-44-45-58-52 -warn-error +a)))
 (release
  (flags (:standard -O3))))

(dirs :standard \ external)

(executables
 (names main efuns_client)
 (libraries
     ; system libs
     str unix
;    bigarray
;    threads          ;; needed for json-wheel (Condition?)
;    json-wheel       ;; Json_io, Json_type
;

     ; efuns libs
     efuns_commons
     efuns_core 
     efuns_graphics efuns_graphics_gtk_cairo2
     efuns_features ;efuns_ipc
     efuns_major_modes efuns_minor_modes
     efuns_prog_modes efuns_text_modes
     ; efuns_pfff_modes
     efuns_config

     ; pfff libs


;    commons commons_core commons_ocollection
;    pfff-config
;    pfff-h_program-lang
;    pfff-lang_python pfff-lang_python-analyze
;    pfff-lang_js pfff-lang_js-analyze
;    pfff-lang_json
;    pfff-lang_cpp pfff-lang_cpp-analyze
;    pfff-lang_c pfff-lang_c-analyze
;    pfff-lang_ml pfff-lang_ml-analyze
;    pfff-lang_java pfff-lang_java-analyze
;    pfff-lang_go pfff-lang_go-analyze
;    pfff-lang_ruby pfff-lang_ruby-analyze
;    pfff-lang_php
;    pfff-lang_lisp
;    pfff-lang_skip
;    pfff-lang_FUZZY
;    pfff-lang_GENERIC pfff-lang_GENERIC-analyze
 )
 (link_flags (-linkall))
 ; for ocamldebug
 (modes byte)
)


(install
 (package efuns)
 (section bin)
 (files (main.exe as efun))
)
