# -*- makefile -*-

##############################################################################
# Prelude 
##############################################################################

# This file assumes the "includer" has set a few variables and then did an
# include Makefile.common. Here are those variables:
#  - SRC
#  - INCLUDEDIRS
#  - DEPEND_INCLUDES

##############################################################################
# Generic variables
##############################################################################

INCLUDES?=$(INCLUDEDIRS:%=-I %) $(SYSINCLUDES)

OBJS?=    $(SRC:.ml=.cmo)
OPTOBJS?= $(SRC:.ml=.cmx)

##############################################################################
# Generic ocaml variables
##############################################################################

#important warnings (see ocaml manual section on ocamlc):
#+3  report deprecated features (String.set, Bytes.set stuff)
#-4  allow | _ patterns in match
#-6  allow to omit labels
#+27: unused variables!! (not detected by default but really useful)
#-29 alow multiline strings (not portable for windows?)
#-41 allow ambiguous constructor in 2 opened modules
#-44 allow shadow module identifier (TODO: fix them)
#-45 allow shadowing open (TODO: fix them though)
#-48 allow eliminating optional args, unclear how to fix without wide  changes
#-21: statement never returns (for olight)
#-58: for ocamlopt, to not complain about missing .cmx in external/ libs
WARNING_FLAGS?=-w +A-4-6-29-44-45-58 -warn-error +a
#default is: +a-4-6-7-9-27-29-32..42-44-45-48-50-60 (see ocamlc -help)

#dont use -custom, it makes the bytecode unportable.
OCAMLCFLAGS?=-g -absname -bin-annot -thread $(WARNING_FLAGS)

# This flag is also used in subdirectories so don't change its name here.
OPTFLAGS?=-thread $(WARNING_FLAGS)

OCAMLC=ocamlc$(OPTBIN) $(PPX) $(OCAMLCFLAGS)  $(INCLUDES)
OCAMLOPT=ocamlopt$(OPTBIN) $(PPX) $(OPTFLAGS) $(INCLUDES)
OCAMLLEX=ocamllex #-ml # -ml for debugging lexer, but slightly slower
OCAMLYACC=ocamlyacc -v
OCAMLDEP=ocamldep
OCAMLMKTOP=ocamlmktop -g -custom $(INCLUDES) -thread

# can also be set via 'make static'
STATIC= #-ccopt -static

# can also be unset via 'make purebytecode'
BYTECODE_STATIC=-custom

##############################################################################
# Top rules
##############################################################################

all::

##############################################################################
# Generic ocaml rules
##############################################################################

.SUFFIXES: .ml .mli .cmo .cmi .cmx

.ml.cmo:
	$(OCAMLC)  -c $<
.mli.cmi:
	$(OCAMLC)  -c $<
.ml.cmx:
	$(OCAMLOPT)  -c $<

.ml.mldepend: 
	$(OCAMLC) -i $<

clean::
	rm -f *.cm[ioxa] *.[oa] *.cmxa *.annot *.cmt*
	rm -f *~ .*~ *.exe gmon.out #*#

distclean::
	rm -f .depend

beforedepend::

#TODO? instead of relying on DEPEND_INCLUDES?
# see https://stackoverflow.com/questions/6145041/makefile-filter-out-strings-containing-a-character
#FILTER_OUT = $(foreach v,$(2),$(if $(findstring $(1),$(v)),,$(v)))
#INCLUDEDIRS2=$(call FILTER_OUT,external, $(INCLUDEDIRS))
#INCLUDES2=$(INCLUDEDIRS2:%=-I %)

depend:: beforedepend
	$(OCAMLDEP) $(DEPEND_INCLUDES) *.mli *.ml > .depend

-include .depend
